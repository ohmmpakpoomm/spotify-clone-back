generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  firstName String     @map("first_name")
  lastName  String     @map("last_name")
  email     String?    @unique
  mobile    String?    @unique
  password  String
  status    Status     @default(REGULAR)
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime   @updatedAt @map("updated_at") @db.Timestamp(0)
  Playlist  Playlist[]

  @@map("users")
}

model Playlist {
  id            Int            @id @default(autoincrement())
  name          String
  userId        Int            @map("user_id")
  playlistImage String?        @map("playlist_image")
  createdAt     DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime       @updatedAt @map("updated_at") @db.Timestamp(0)
  PlaylistList  PlaylistList[]
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "playlists_user_id_fkey")
  @@map("playlists")
}

model Track {
  id           Int            @id @default(autoincrement())
  name         String
  uri          String         @unique
  durationMs   Int            @map("duration_ms")
  albumImage   String         @map("album_image")
  albumName    String         @map("album_name")
  artistName   String         @map("artist_name")
  addAt        DateTime       @default(now()) @map("add_at") @db.Timestamp(0)
  PlaylistList PlaylistList[]

  @@map("tracks")
}

model PlaylistList {
  playlistId Int      @map("playlist_id")
  trackId    Int      @map("track_id")
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  track      Track    @relation(fields: [trackId], references: [id], onDelete: Cascade)

  @@id([playlistId, trackId])
  @@index([trackId], map: "playlist_lists_track_id_fkey")
  @@map("playlist_lists")
}

enum Status {
  REGULAR
  PREMIUM
  DISABLED
}
